<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Admin</title>
    <%- include layout/head %>
        <link rel="stylesheet" type="text/css" href="/static/css/homepage.css">
        <script type="text/javascript" src="/socket.io/socket.io.js"></script>
        <script type="text/javascript" src="/static/js/jquery.min.js"></script>
</head>

<body>
    <div class="container">
        <div class="row" style="margin-bottom: 10px; margin-top: 10px;">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <h3 class="pull-left">Hello
                    <% if(data && data.fullname){ %>
                        <%=data.fullname %>
                            <% } %>
                </h3>
                <a class="btn btn-info pull-right" href="/logout">Logout</a>
            </div>
        </div>
        <div class="panel panel-success">
            <div class="panel-heading">Files</div>
            <!-- /.panel-heading -->
            <div class="panel-body title-upload">
                <% if (data && data.error) { %>
                    <div id="login-alert" class="alert alert-danger col-sm-12">
                        <%= data.error %>
                    </div>
                    <% } %>
                        <br/> <br/>
                        <div id="list-item">
                            <div class="row">
                                <div id="list-files"></div>
                            </div>
                        </div>
                        <span class="glyphicon glyphicon-cloud-upload"></span>
                        <h2>File Upload</h2>
                        <div id="drop_zone">Drop files here</div>
                        <output id="list"></output>
                        <div class="progress">
                            <div class="progress-bar" role="progressbar"></div>
                        </div>
                        <input id="upload-input" multiple="multiple" name="uploads[]" style="display: none;" type="file" />
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function() {
            var socket = io("http://localhost:3000");

            // Get data id from server send.
            var local_data = <%- JSON.stringify(data) %>;
            console.log(local_data);
            // Gui su kien co nguoi dung dang nhap.
            socket.emit("new-user", local_data.id);

            // Lang nghe su kien tra danh sach file ve cho nguoi dung.
            socket.on("send-list-files", function(data) {
                console.log(data);
                var str = '';
                for (var i = 0; i < data.length; i++) {
                    str += '<div class="col-xs-3 col-sm-2 col-md-2 col-lg-1">' +
                        '<a draggable="true" href="' + data[i].name + '" id="drag_out" data-downloadurl="application/zip:download.zip' + data[i].path + '/' + data[i].name + '"><img src="/static/imgs/folder.svg">' + data[i].name + '</a></div>';
                }
                // console.log(str);
                document.getElementById('list-files').innerHTML = str;
            });

            function handleFileSelect(evt) {
                evt.stopPropagation();
                evt.preventDefault();

                var files = evt.dataTransfer.files; // FileList object.

                console.log(files);

                // Upfile to server.
                if (files.length > 0) {
                    // Create a FormData object which will be sent as the data payload in the
                    // AJAX request
                    var formData = new FormData();
                    // Handler file name
                    var listFilesFromUser = [];
                    // Loop through all the selected files and add them to the formData object
                    for (var i = 0; i < files.length; i++) {
                        var file = files[i];
                        console.log(file);

                        // Add the files to formData object for the data payload
                        formData.append('uploads[]', file, file.name);
                        listFilesFromUser.push(file);
                    }
                    console.log(formData);
                    console.log(listFilesFromUser);

                    $.ajax({
                        url: '/',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            console.log('Upload successful!\n' + data);

                            // Send event send file success.
                            socket.emit("send-file-success", listFilesFromUser, local_data.id);
                        },
                        xhr: function() {
                            // create an XMLHttpRequest
                            var xhr = new XMLHttpRequest();

                            // listen to the 'progress' event
                            xhr.upload.addEventListener('progress', function(evt) {

                                if (evt.lengthComputable) {
                                    // calculate the percentage of upload completed
                                    var percentComplete = evt.loaded / evt.total;
                                    percentComplete = parseInt(percentComplete * 100);

                                    // update the Bootstrap progress bar with the new percentage
                                    $('.progress-bar').text(percentComplete + '%');
                                    $('.progress-bar').width(percentComplete + '%');

                                    // once the upload reaches 100%, set the progress bar text to done
                                    if (percentComplete === 100) {
                                        $('.progress-bar').html('Done');
                                        // Using socket.io to send user.
                                        // console.log(evt);
                                        // socket.emit();
                                    }
                                }
                            }, false);
                            return xhr;
                        }
                    });
                }
                //-----------------
                // files is a FileList of File objects. List some properties.
                var output = [];
                for (var i = 0, f; f = files[i]; i++) {
                    output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
                    f.size, ' bytes, last modified: ',
                        f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                        '</li>');
                }
                document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';
            }

            function handleDragOver(evt) {
                evt.stopPropagation();
                evt.preventDefault();
                evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
            }

            // Setup the dnd listeners.
            var dropZone = document.getElementById('drop_zone');
            dropZone.addEventListener('dragover', handleDragOver, false);
            dropZone.addEventListener('drop', handleFileSelect, false);

            // Handle drag out file in desktop.
            //var files = [document.getElementById("drag_out")], fileDetails = [];
               
            document.getElementById('drag_out').addEventListener('dragstart', function(e) {
                if (this.dataset) {
                    e.dataTransfer.setData('DownloadURL', this.dataset.downloadurl);
                }
            }, false);
            // document.getElementById("drag_out").addEventListener("dragstart",
            //     function(event) {
            //         event.dataTransfer.setData("DownloadURL",
            //             event.target.id);
            //     }, false);
        });
    </script>
</body>

</html>